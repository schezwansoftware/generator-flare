<% if (dbType === 'mongodb') {%>import * as mongoose from 'mongoose';

export const <%= entityClassName %>Schema = new mongoose.Schema({
<% for (const field of generatedFields) { %>
    <%= field.fieldName %>: {type: mongoose.SchemaTypes.<%= field.fieldType%>, required: <%= field.requiredField ? 'true': 'false'%>},
<% } %>
});
<%}%><% if (dbType === 'mysql') {%>import {Entity, Column, PrimaryGeneratedColumn} from 'typeorm';

@Entity()
export class <%= entityClassName %> {
   @PrimaryGeneratedColumn()
   id: number;
<% for (const field of generatedFields) { -%>

   @Column()
   <%= field.fieldName %>: <%= getType(field.fieldType) %>;
<% } %>}
<%}%>
<%
function getType(type) {
  switch (type) {
    case "String":
      return "string";
    case "Date":
      return "Date";
    case "Boolean":
      return "boolean";
    case "ObjectId":
      return "string";
    case "Number":
      return "number";
    default:
      return "string";
  }
}
%>
