import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes} from '@angular/router';
import {<%= entityClassName %>Component} from './<%= baseName %>.component';
import {FlareRouteGuard} from '../../shared/auth/auth.guard';
import {<%= entityClassName %>UpdateComponent} from './<%= baseName %>-update.component';
import {Injectable} from '@angular/core';
import {<%= entityInterfaceName %>, <%= entityClassName %>} from '../../shared/model/<%= baseName %>.model';
import {Observable, of} from 'rxjs';
import {<%= entityClassName %>Service} from './<%= baseName %>.service';
import {HttpResponse} from '@angular/common/http';
import {filter, map} from 'rxjs/operators';
import {<%= entityClassName %>DetailComponent} from './<%= baseName %>-detail.component';
import {<%= entityClassName %>DeletePopupComponent} from './<%= baseName %>-delete-dialog.component';

@Injectable({ providedIn: 'root' })
export class <%= entityClassName %>Resolve implements Resolve<<%= entityInterfaceName %>> {
    constructor(private service: <%= entityClassName %>Service) {}

    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<<%= entityInterfaceName %>> {
        const id = route.params.id ? route.params.id : null;
        if (id) {
            return this.service.find(id).pipe(
                filter((response: HttpResponse<<%= entityClassName %>>) => response.ok),
                map((<%= entityName %>: HttpResponse<<%= entityClassName %>>) => <%= entityName %>.body)
            );
        }
        return of(new <%= entityClassName %>());
    }
}

export const <%= entityRouteName %>_ROUTES: Routes = [
    {
        path: '',
        component: <%= entityClassName %>Component,
        data: {
            authorities: ['ROLE_USER'],
        },
        canActivate: [FlareRouteGuard]
    },
    {
        path: 'new',
        component: <%= entityClassName %>UpdateComponent,
        resolve: {
            <%= entityName %>: <%= entityClassName %>Resolve
        },
        data: {
            authorities: ['ROLE_USER'],
        },
        canActivate: [FlareRouteGuard]
    },
    {
        path: ':id/edit',
        component: <%= entityClassName %>UpdateComponent,
        resolve: {
            <%= entityName %>: <%= entityClassName %>Resolve
        },
        data: {
            authorities: ['ROLE_USER'],
        },
        canActivate: [FlareRouteGuard]
    },
    {
        path: ':id/view',
        component: <%= entityClassName %>DetailComponent,
        resolve: {
            <%= entityName %>: <%= entityClassName %>Resolve
        },
        data: {
            authorities: ['ROLE_USER'],
        },
        canActivate: [FlareRouteGuard]
    },
];
export const <%= entityName %>PopupRoute: Routes = [
    {
        path: ':id/delete',
        component: <%= entityClassName %>DeletePopupComponent,
        resolve: {
            <%= entityName %>: <%= entityClassName %>Resolve
        },
        data: {
            authorities: ['ROLE_USER'],
        },
        canActivate: [FlareRouteGuard],
        outlet: 'popup'
    }
];
